from typing import List  #створюемо функцію трикутник паскаля

def get_triangle(rows: int) -> List[List[int]]:       # приймаемо одне число,повертає список списків чисел
    triangle = []                                 #зберигаемо усі рядки трикутника

    for row_num in range(rows):                  #йдемо по кожному рядку від 0 до rows-1
        if row_num == 0:                          #якшо не перший рядок,
            triangle.append([1])  # просто додаемо 1 , тому що перший рядок паскаля завжди 1
        else:
            prev_row = triangle[-1]  # беремо остнній рядок трикутника
            new_row = [1]  # починаем оновий рядок завжди з 1

            for i in range(1, len(prev_row)):   # ідемо по елементах попереднього рядка і  починаюмо з другого індекс 1

                new_row.append(prev_row[i - 1] + prev_row[i])   # кожне новк число  буде  сума двох чисел над ним у попередньому рядку ( по формулі )

            new_row.append(1)  # кожний рядок тут закінчюется 1
            triangle.append(new_row) #додаемо новий рядок у трикутник

    return triangle  # після побудови , повертаемо трикутник


triangle = get_triangle(5)

# Знаходимо максимальну ширину останнього рядка для центрування
max_width = len(" ".join([str(num) for num in triangle[-1]]))
#тут [str(num) for num in triangle[-1]] — це новий список, де кожне число з останнього рядка перетворене у строку


for row in triangle:        # Виводимо кожен рядок по центру, проходимо по кожному рядку трикутника
    line = " ".join([str(num) for num in row])     # кожне число перетворюємо у текст (str) і з'єднуємо через пробіл

    print(line.center(max_width))    # вирівнюємо рядок по центру, використовуючи ширину найбільшого рядка